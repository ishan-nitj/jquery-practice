Lesson 4:jquery events

=>Review of jQuery Events
$(document).ready(function() {
    $('thingToTouch').event(function() {
        $('thingToAffect').effect();
    });
});

Sometimes if you want an effect to occur right away, without an event like .click() or .hover(), you'll skip the second line in the above:

$(document).ready(function() {
    $('thingToAffect').effect();
});

=>Mouse hover
$(document).ready(function(){
$('div').hover(function(){
$(this).addClass('red');
});
});

=>Double click
$(document).ready(function(){
$('div').dblclick(function(){
$(this).fadeOut('fast');
});
});

=>What if you wanted to create an effect when your mouse is on top of an object, then have that effect vanish when your mouse moved away?

$(document).ready(function(){

  $('div').hover(
    function(){
    $(this).addClass('active');
    },
    function(){
    $(this).removeClass('active');    
    }
  );

});

=>Lighting up textbox
Another event we can make use of is .focus(). We say an element has focus when we click on it or tab over to it. If you've ever filled out a form on a web page and seen how each text box lights up when you tab to it or click on it, you've seen focus in action!

The .focus() event handler only works on elements that can receive focusâ€”the list of these elements is a bit vague, but HTML elements like <textarea>s and <input>s are the usual suspects.

$(document).ready(function(){
$('input').focus(function(){
$(this).css('outline-color','#FF0000');
});
});

=>Animate effect
The .animate() effect takes two inputs: the animation to perform, and the time in which to perform the animation.

$(document).ready(function(){
$('div').animate({left:'+=10'},500);
});

=>keydown event
The .keydown() event is triggered whenever a key on the keyboard is pressed. It only works on whatever page element has focus, so you'll need to click on the window containing your div before pressing a key in order for you to see its effects.
Ex:
$(document).ready(function(){
$(document).keydown(function(){
$('div').animate({left:'+=10'},500);
});
});

Note here we want the whole document object to respond whenever a key is pressed.

=>We can also pass the key as function in keydown event to identify the key
$(document).ready(function() {
    $(document).keydown(function(key) {
        switch(parseInt(key.which,10)) {
			// Left arrow key pressed
			case 37:
				$('img').animate({left: "-=10px"}, 'fast');
				break;
			// Up Arrow Pressed
			case 38:
				$('img').animate({top: "-=10px"}, 'fast');
				break;
			// Right Arrow Pressed
			case 39:
				$('img').animate({left: "+=10px"}, 'fast');
				break;
			// Down Arrow Pressed
			case 40:
				$('img').animate({top: "+=10px"}, 'fast');
				break;
		}
	});
});
